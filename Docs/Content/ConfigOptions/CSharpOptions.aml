<?xml version="1.0" encoding="utf-8"?>
<topic id="09cc5bfa-9eba-47e5-ba5f-a36e04f09b0d" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>This category contains several options that let you fine tune how C# source code files are spell
checked.  The following options are available.  All of them are disabled by default so that the associated
elements are included for spell checking.  By enabling the last option, it is also possible to have these options
applied to all C-style code as applicable.</para>
		</introduction>

		<section>
			<content>
				<list class="bullet">
					<listItem>
						<para><ui>Ignore XML documentation comments (/// ... and /** ... */)</ui> - If enabled, XML
documentation comments will be excluded from spell checking.  Unless disabled with the option below, standard
delimited comments will still be included for spell checking.</para>
					</listItem>

					<listItem>
						<para><ui>Ignore delimited comments (/* ... */)</ui> -  This is useful for excluding private comments
that nobody will see except for developers and commented out code.  Unless disabled with the option above,
delimited XML comments will still be included for spell checking.</para>
					</listItem>

					<listItem>
						<para><ui>Ignore standard single line comments (// ...)</ui> - This is useful for excluding private
comments that nobody will see except for developers and commented out code.</para>
					</listItem>

					<listItem>
						<para><ui>Ignore quadruple slash single line comments (//// ...)</ui> - This option is useful for
ignoring commented out code using the method recommended by StyleCop so that it does not produce style warnings.</para>
					</listItem>

					<listItem>
						<para><ui>Ignore normal string literals ("...")</ui> - This is useful for ignoring string literals in
code if you use resource files for localized text.  In such cases, the string literals are usually not valid
words and enabling this option prevents the resource keys from showing up as spelling errors.</para>
					</listItem>

					<listItem>
						<para><ui>Ignore verbatim string literals (@"...")</ui> - Verbatim string literals typically contain
such things as filenames or multi-line text that is not usually considered text that needs to be spell checked.
Enabling this option prevents their content from being checked for spelling errors.</para>
					</listItem>

					<listItem>
						<para><ui>Ignore interpolated string literals ($"{PropertyName}...")</ui> - This is useful for
skipping interpolated strings which may only contain property format specifiers.  Enabling this option prevents
their content from being checked for spelling errors.  If left disabled, all string content except text within
braces which denote format specifiers will be spell checked.</para>
					</listItem>

					<listItem>
						<para><ui>Apply the above options to all C-style languages as applicable</ui> - If this option is
enabled, the above options are applied to all C-style languages as applicable.  For example, all of the comments
options and the normal string literal option will be applied to C, C++, JavaScript, etc.</para>
					</listItem>

				</list>
			</content>
		</section>
		
		<relatedTopics>
			<link xlink:href="fb81c214-0fe0-4d62-a172-d7928d5b91d5" />
		</relatedTopics>
	</developerConceptualDocument>
</topic>
