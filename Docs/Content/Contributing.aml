<?xml version="1.0" encoding="utf-8"?>
<topic id="847a2b53-6583-4198-80ef-0e537346e4a3" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<autoOutline excludeRelatedTopics="true" lead="none" />
		</introduction>

		<section address="Issues">
			<title>Issues</title>
			<content>
				<para>If you don't feel like working on the code yourself, <externalLink>
<linkText>filing an issue</linkText>
<linkAlternateText>VSSpellChecker Issues</linkAlternateText>
<linkUri>https://github.com/EWSoftware/VSSpellChecker/issues</linkUri>
<linkTarget>_blank</linkTarget>
</externalLink> and letting me handle the change is fine.  You don't need to file an issue for trivial changes
(i.e. typos, minor fixes, etc.).  Just send a pull request if it's small.</para>

				<para>If an issue is complex, adds or removes functionality, changes existing behavior, etc. consider
filing an issue and giving me time to respond before sending a corresponding pull request.  If you want to work
on the issue, just let it be known on the issue thread.  Giving me a chance to review the issue will help save
time and prevents you from wasting time on something that cannot be implemented.  For example, I might let you
know why existing behavior cannot be changed or about particular implementation constraints you need to keep in
mind, etc.</para>
			</content>
		</section>

		<section address="Contributing">
			<title>Contributing to the Project</title>
			<content>
				<list class="ordered">
					<listItem>
						<para>Unless it is a trivial change such as a typo or minor fix, make sure that there is a
corresponding issue for your change first.  If there isn't, create one.</para>
					</listItem>

					<listItem>
						<para>Create a fork in GitHub</para>
					</listItem>

					<listItem>
						<para>Create a branch off the master branch.  Name it something that makes sense, such as
<legacyItalic>issue-123</legacyItalic> or <legacyItalic>githubUserID-issue</legacyItalic>.  This makes it easy
for everyone to figure out what the branch is used for.  It also makes it easier to isolate your changes from
incoming changes from the origin.</para>
					</listItem>

					<listItem>
						<para>Commit your changes and push your changes to GitHub.</para>
					</listItem>

					<listItem>
						<para>Create a pull request against the origin's master branch.</para>
					</listItem>

				</list>
			</content>
		</section>

		<section address="CodingStyle">
			<title>Coding Style</title>
			<content>
				<para>In general, use the Visual Studio defaults.  Take a look at the existing code to see the styles in
use. The <localUri>.editorconfig</localUri> file defines the preferred style defaults.</para>

				<list class="ordered">
					<listItem>
						<para>In source code, use four spaces for indentation, no tabs.</para>
					</listItem>

					<listItem>
						<para>For XML, XAML, HTML, and similar file types, use two spaces for indentation and do use tabs.</para>
					</listItem>

					<listItem>
						<para>Namespace imports should be specified at the top of the file, outside of the
<codeInline>namespace</codeInline> declaration, and should be sorted alphabetically.  Place
<codeInline>System.</codeInline> namespaces at the top and blank lines between different top level groups.
Remove any unused namespaces to avoid unnecessary clutter.</para>
					</listItem>

					<listItem>
						<!-- Ignore spelling: Allman -->
						<para>Use Allman style braces where each brace begins on a new line. A single line statement block
can go without braces but the block must be properly indented on its own line.</para>
					</listItem>

					<listItem>
						<para>Do not insert spaces after keywords in control flow statements (use <codeInline>if(a &lt; b)</codeInline>
instead of <codeInline>if (a &lt; b)</codeInline>).</para>
					</listItem>

					<listItem>
						<para>Use <codeInline>camelCase</codeInline> private members without leading underscores or other
such prefixes like <codeInline>m_</codeInline>.</para>
					</listItem>

					<listItem>
						<para>Always specify the visibility even if it is the default (i.e. <codeInline>private string foo</codeInline>
not <codeInline>string foo</codeInline>).</para>
					</listItem>

				</list>
			</content>
		</section>

		<relatedTopics>
			<link xlink:href="027d2fbc-7bfb-4dc3-b4f5-85f95fcf7629" />
			<externalLink>
				<linkText>License Agreement</linkText>
				<linkUri>https://github.com/EWSoftware/VSSpellChecker/blob/master/LICENSE</linkUri>
				<linkTarget>_blank</linkTarget>
			</externalLink>
		</relatedTopics>
	</developerConceptualDocument>
</topic>
