<?xml version="1.0" encoding="utf-8"?>
<topic id="deeba4a0-5a5f-497c-a9c1-7dec64e9c2bf" revisionNumber="1">
	<developerConceptualDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
		<introduction>
			<para>The code is separated into two branches.  The master branch is for Visual Studio 2017 and later and
is the default branch for all current and future development.  The VSLegacy branch is for Visual Studio 2013 and
2015 and is being retained for legacy support only.  In order to build the Visual Studio Spell Checker projects
you will need the following tools:</para>

			<list class="bullet">
				<listItem>
					<para>For the master branch, you will need Visual Studio 2017 15.5 or later.</para>
				</listItem>
				
				<listItem>
					<para>For the VSLegacy branch, you will need Visual Studio 2013 Update 5 or Visual Studio 2015 Update 3
and the related Visual Studio SDK.</para>
				</listItem>

			</list>
		</introduction>

		<section>
			<title>Folder Layout</title>
			<content>
				<para><localUri>.\Source</localUri> - This folder contains the source code for all of the projects.</para>

				<para><localUri>.\NuGet</localUri> - This contains the NuGet configuration file and script used to
generate the definitions assembly NuGet package.</para>

				<para><localUri>.\Docs</localUri> - The
<externalLink>
					<linkText>Sandcastle Help File Builder</linkText>
					<linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
					<linkTarget>_blank</linkTarget>
				</externalLink> project used to manage the spell checker project's documentation.</para>

				<para><localUri>.\Deployment</localUri> - This folder contains the deployment resources (the installer
and all related files) generated by building the projects.</para>

			</content>
		</section>

		<section>
			<title>Building and Debugging the Projects</title>
			<content>
				<para>To build the projects, open the solution file (<localUri>*.sln</localUri>) found in the
<localUri>Source\</localUri> folder and build it.  You can also run the <localUri>MasterBuild.bat</localUri>
script from a command prompt to build the projects.  The projects should be built at least once in Visual
Studio so that all of the necessary NuGet packages are restored and available for the command line build.</para>

				<para>In order to debug the projects:</para>

				<list class="bullet">
					<listItem>
						<para>Set the <localUri>VSSpellChecker</localUri> project as the default project and then open its
project properties.</para>
					</listItem>

					<listItem>
						<para>Go to the <legacyBold>Debug</legacyBold> category.</para>
					</listItem>

					<listItem>
						<para>For the <legacyBold>Start Action</legacyBold> option, set it to <legacyBold>Start external
program</legacyBold>, click the "..." button after the text box, navigate to the installation folder for your
version of Visual Studio and select the <localUri>devenv.exe</localUri> file in that folder (i.e.
<localUri>C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\Common7\IDE\devenv.exe</localUri>).</para>
					</listItem>

					<listItem>
						<para>For the <legacyBold>Command line arguments</legacyBold> option, enter the value
<codeInline>/rootsuffix Exp</codeInline>.</para>
					</listItem>

					<listItem>
						<para>When you run the project, it should start a new instance of Visual Studio using the
experimental instance settings.</para>
					</listItem>

				</list>

			</content>
		</section>

		<relatedTopics>
			<link xlink:href="027d2fbc-7bfb-4dc3-b4f5-85f95fcf7629" />
			<externalLink>
				<linkText>License Agreement</linkText>
				<linkUri>https://github.com/EWSoftware/VSSpellChecker/blob/master/LICENSE</linkUri>
				<linkTarget>_blank</linkTarget>
			</externalLink>
		</relatedTopics>
	</developerConceptualDocument>
</topic>
